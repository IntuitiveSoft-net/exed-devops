provider "aws" {
  region = var.region
  access_key = var.access_key
  secret_key = var.secret_key
}

data "aws_vpc" "this" {
  filter {
    name   = "tag:Name"
    values = [var.vpc_name]
  }
}

data "aws_route_table" "this" {
  filter {
    name   = "tag:Name"
    values = [var.rt_name]
  }
}

resource "aws_vpn_gateway" "this" {
  vpc_id = data.aws_vpc.this.id

  tags = {
    Name = "${var.pod}-vgw"
  }

}

resource "aws_customer_gateway" "this" {
  bgp_asn    = var.customer_gateway_asn
  ip_address = var.customer_gateway_ip
  type       = var.customer_gateway_type

  tags = {
    Name = "${var.pod}-cgw"
  }

}

resource "aws_vpn_connection" "this" {
  vpn_gateway_id      = aws_vpn_gateway.this.id
  customer_gateway_id = aws_customer_gateway.this.id
  type                = var.vpn_connection_type
  static_routes_only  = true

  tags = {
    Name = "${var.pod}-vpn"
  }

}

resource "aws_vpn_connection_route" "this" {
  destination_cidr_block = var.vpn_connection_destination
  vpn_connection_id      = aws_vpn_connection.this.id
}

# ????
resource "aws_vpn_gateway_route_propagation" "this" {
  vpn_gateway_id = aws_vpn_gateway.this.id
  route_table_id = data.aws_route_table.this.id
}

resource "local_file" "ansible_vars" {
  content = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform mgmt configuration.

    strongswan_base: /etc
    ipsec_service: strongswan
    vpc_cidr: ${data.aws_vpc.this.cidr_block}
    local_cidr: ${var.vpn_connection_destination}
    tunnel1_address: ${aws_vpn_connection.this.tunnel1_address}
    tunnel1_cgw_inside_address: ${aws_vpn_connection.this.tunnel1_cgw_inside_address}/30
    tunnel1_vgw_inside_address: ${aws_vpn_connection.this.tunnel1_vgw_inside_address}/30
    tunnel1_preshared_key: ${aws_vpn_connection.this.tunnel1_preshared_key}
    tunnel2_address: ${aws_vpn_connection.this.tunnel2_address}
    tunnel2_cgw_inside_address: ${aws_vpn_connection.this.tunnel2_cgw_inside_address}/30
    tunnel2_vgw_inside_address: ${aws_vpn_connection.this.tunnel2_vgw_inside_address}/30
    tunnel2_preshared_key: ${aws_vpn_connection.this.tunnel2_preshared_key}
    DOC
  filename = var.ansible_vars_file
}

output "tunnel1_address" {
    value = aws_vpn_connection.this.tunnel1_address
}

output "tunnel1_cgw_inside_address" {
    value = aws_vpn_connection.this.tunnel1_cgw_inside_address
}

output "tunnel1_inside_cidr" {
    value = aws_vpn_connection.this.tunnel1_inside_cidr 
}

output "tunnel1_preshared_key" {
    value = aws_vpn_connection.this.tunnel1_preshared_key
    sensitive = true
}

output "tunnel1_vgw_inside_address" {
    value = aws_vpn_connection.this.tunnel1_vgw_inside_address
}

output "tunnel2_address" {
    value = aws_vpn_connection.this.tunnel2_address
}

output "tunnel2_cgw_inside_address" {
    value = aws_vpn_connection.this.tunnel2_cgw_inside_address
}

output "tunnel2_inside_cidr" {
    value = aws_vpn_connection.this.tunnel2_inside_cidr 
}

output "tunnel2_preshared_key" {
    value = aws_vpn_connection.this.tunnel2_preshared_key
    sensitive = true
}

output "tunnel2_vgw_inside_address" {
    value = aws_vpn_connection.this.tunnel2_vgw_inside_address
}